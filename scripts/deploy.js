const { ethers } = require("hardhat");
const { formatEther } = require("ethers");

async function main() {
  console.log("üöÄ D√©ploiement du contrat CertificateRegistry...");

  // R√©cup√©rer le deployer
  const [deployer] = await ethers.getSigners();
  console.log("üë§ D√©ployeur:", deployer.address);

  // R√©cup√©rer solde
  const balance = await deployer.provider.getBalance(deployer.address);
  console.log("üí∞ Solde du d√©ployeur:", formatEther(balance), "ETH");

  // Pr√©parer le contrat
  const CertificateRegistry = await ethers.getContractFactory("CertificateRegistry");
  console.log("üì¶ D√©ploiement en cours...");

  // D√©ployer
  const certificateRegistry = await CertificateRegistry.deploy();

  // Attendre la transaction de d√©ploiement
  await certificateRegistry.deploymentTransaction().wait();

  // Afficher adresse et hash
  console.log("‚úÖ Contrat d√©ploy√© √† l'adresse:", certificateRegistry.target);
  console.log("üîó Hash de la transaction:", certificateRegistry.deploymentTransaction().hash);

  // Test rapide de la fonction d'enregistrement (optionnel)
  const testHash = "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef";
  try {
    console.log("üìù Enregistrement d'un certificat test...");
    const tx = await certificateRegistry.registerCertificate(testHash);
    await tx.wait();
    console.log("‚úÖ Certificat enregistr√©.");

    const exists = await certificateRegistry.certificateExists(testHash);
    console.log("üîç Certificat existe ? ", exists);

    if (exists) {
      const [owner, timestamp] = await certificateRegistry.getCertificateOwner(testHash);
      console.log("üë§ Propri√©taire:", owner);
      console.log("‚è∞ Timestamp:", timestamp.toString());
    }

    const count = await certificateRegistry.getCertificateCount(deployer.address);
    console.log("üìä Nombre de certificats du d√©ployeur:", count.toString());

  } catch (error) {
    console.error("‚ùå Erreur lors du test:", error);
  }

  console.log("üéâ D√©ploiement termin√© !");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå Erreur lors du d√©ploiement :", error);
    process.exit(1);
  });
